@functions {
    int GetFilteredRowCountWithoutPage(MVCxGridView grid) {
        int selectedRowsOnPage = 0;
        foreach (var key in grid.GetCurrentPageRowValues("ID")) {
            if (grid.Selection.IsRowSelectedByKey(key))
                selectedRowsOnPage++;
        }
        return grid.Selection.FilteredCount - selectedRowsOnPage;
    }
}

@Html.DevExpress().GridView(settings => {
    settings.Name = "gridDetail" + ViewData["ID"]; 
    settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewDetail", ID = ViewData["ID"] };
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.KeyFieldName = "ID";
    settings.SettingsDetail.MasterGridName = "gridMaster";
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowSelectCheckbox = true;
    settings.Columns.Add("ID");
    settings.Columns.Add("Data");
    settings.ClientSideEvents.Init = "gridDetail_Init";
    settings.ClientSideEvents.SelectionChanged = "gridDetail_SelectionChanged";

    settings.CustomJSProperties += (s, e) => {
        var grid = s as MVCxGridView;
        e.Properties["cpVisibleRowCount"] = grid.VisibleRowCount;
        e.Properties["cpFilteredRowCountWithoutPage"] = GetFilteredRowCountWithoutPage(grid);
        e.Properties["cpMasterRowKey"] = ViewData["ID"];
    };
}).Bind(Model).GetHtml()